<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TorchScript on Dickson Neoh - Personal Portfolio</title><link>https://dicksonneoh.com/tags/torchscript/</link><description>Recent content in TorchScript on Dickson Neoh - Personal Portfolio</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 16 Sep 2023 11:00:15 +0800</lastBuildDate><atom:link href="https://dicksonneoh.com/tags/torchscript/index.xml" rel="self" type="application/rss+xml"/><item><title>Unlocking Edge ML: From PyTorch to Edge Deployment</title><link>https://dicksonneoh.com/portfolio/unlocking_edge_ml_from_pytorch_to_edge_deployment/</link><pubDate>Sat, 16 Sep 2023 11:00:15 +0800</pubDate><guid>https://dicksonneoh.com/portfolio/unlocking_edge_ml_from_pytorch_to_edge_deployment/</guid><description>ðŸš€ Motivation: Edge Deployment It&amp;rsquo;s late 2023, everyone seems to be talking about complex and larger models.
Sophisticated models perform well at specific tasks. But they come with the cost of massive computational power.
Typically that&amp;rsquo;s available in cloud-based environments. Cloud-based environments has limitations, such as latency, bandwidth constraints, and privacy concerns.
This is when edge deployment comes into play.
In simple terms, edge deployment means running a model close to the source of the data.</description></item><item><title>PyTorch at the Edge: Deploying Over 964 TIMM Models on Android with TorchScript and Flutter</title><link>https://dicksonneoh.com/portfolio/pytorch_at_the_edge_timm_torchscript_flutter/</link><pubDate>Tue, 07 Feb 2023 11:00:15 +0800</pubDate><guid>https://dicksonneoh.com/portfolio/pytorch_at_the_edge_timm_torchscript_flutter/</guid><description>ðŸ”¥ Motivation With various high-level libraries like Keras, Transformer, and Fastai, the barrier to training SOTA models has never been lower.
On top of that with platforms like Google Colab and Kaggle, pretty much anyone can train a reasonably good model using an old laptop or even a mobile phone (with some patience).
The question is no longer &amp;ldquo;can we train a SOTA model?&amp;rdquo;, but &amp;ldquo;what happens after that?&amp;rdquo;
Unfortunately, after getting the model trained, most people wash their hands off at this point claiming their model works.</description></item></channel></rss>