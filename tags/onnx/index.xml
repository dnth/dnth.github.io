<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ONNX on Dickson Neoh - Personal Portfolio</title><link>https://dicksonneoh.com/tags/onnx/</link><description>Recent content in ONNX on Dickson Neoh - Personal Portfolio</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 16 Sep 2023 11:00:15 +0800</lastBuildDate><atom:link href="https://dicksonneoh.com/tags/onnx/index.xml" rel="self" type="application/rss+xml"/><item><title>Unlocking Edge ML: From PyTorch Image Models (TIMM) to ONNX/Torchscript</title><link>https://dicksonneoh.com/blog/unlocking_edge_ml_from_timm_to_onnx_torchscript/</link><pubDate>Sat, 16 Sep 2023 11:00:15 +0800</pubDate><guid>https://dicksonneoh.com/blog/unlocking_edge_ml_from_timm_to_onnx_torchscript/</guid><description>ðŸš€ Motivation: Why Edge Deployment? It&amp;rsquo;s late 2023, everyone seems to be talking about complex and larger models.
Sophisticated models perform well at specific tasks. But they come with the cost of massive computational power. And typically that&amp;rsquo;s available only in cloud-based environments. Cloud-based environments come with limitations, such as latency, bandwidth constraints, and sometimes even privacy concerns.
This is when edge deployment comes into play.
In simple terms, edge deployment means running a model close to the source of the data.</description></item><item><title>Supercharging YOLOv5: How I Got 182.4 FPS Inference Without a GPU</title><link>https://dicksonneoh.com/portfolio/supercharging_yolov5_180_fps_cpu/</link><pubDate>Tue, 07 Jun 2022 11:00:15 +0800</pubDate><guid>https://dicksonneoh.com/portfolio/supercharging_yolov5_180_fps_cpu/</guid><description>ðŸ”¥ Motivation After months of searching, you&amp;rsquo;ve finally found the one.
The one object detection library that just works. No installation hassle, no package version mismatch, and no CUDA errors.
I&amp;rsquo;m talking about the amazingly engineered YOLOv5 object detection library by Ultralytics.
Elated, you quickly find an interesting dataset from Roboflow and finally trained a state-of-the-art (SOTA) YOLOv5 model to detect firearms from image streams.
You ran through a quick checklist &amp;ndash;</description></item><item><title>Faster than GPU: How to 10x your Object Detection Model and Deploy on CPU at 50+ FPS</title><link>https://dicksonneoh.com/portfolio/how_to_10x_your_od_model_and_deploy_50fps_cpu/</link><pubDate>Sat, 30 Apr 2022 15:00:15 +0800</pubDate><guid>https://dicksonneoh.com/portfolio/how_to_10x_your_od_model_and_deploy_50fps_cpu/</guid><description>ðŸš¦ Motivation tip
By the end of this post, you will learn how to:
Train state-of-the-art YOLOX model with your own data. Convert the YOLOX PyTorch model into ONNX and OpenVINO IR format. Run quantization algorithm to 10x your model&amp;rsquo;s inference speed. P/S: The final model runs faster on the CPU than the GPU! ðŸ˜±
Deep learning (DL), seems to be the magic word that makes anything mundane cool again. We find them everywhere - in news reports, blog posts, articles, research papers, advertisements, and even baby books.</description></item></channel></rss>